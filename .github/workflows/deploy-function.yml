name: Deploy Cloud Function

on:
  pull_request:
    branches:
      - main
    paths:
      - 'ingest-weather-data-func/**' # Trigger pipeline only when function code is modified
      - 'terraform/cloud_function/**'
env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: 'actions/checkout@v4' # Must come first!


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Set up Google Cloud SDK
        - uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Zip Function Code
        run: |
          cd ingest-weather-data-func
          zip -r ../function.zip .
        shell: bash

      - name: Upload ZIP to Terraform Directory
        run: mv function.zip ./terraform/cloud-function/

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/cloud-function

      - name: Terraform Plan
        run: terraform plan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="weather_api_key=${{ secrets.WEATHER_API_KEY }}" -var="bigquery_dataset_id=${{ secrets.BIGQUERY_DATASET_ID }}" -var="bigquery_table_name=${{ secrets.BIGQUERY_TABLE_NAME }}"
        working-directory: ./terraform/cloud-function

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
                                                  -var="weather_api_key=${{ secrets.WEATHER_API_KEY }}" \
                                                  -var="bigquery_dataset_id=${{ secrets.BIGQUERY_DATASET_ID }}" \
                                                  -var="bigquery_table_name=${{ secrets.BIGQUERY_TABLE_NAME }}"
        working-directory: ./terraform/cloud-function